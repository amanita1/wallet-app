import { useSelector } from 'react-redux'
import {type RootState } from '../redux/store'

interface Subscription {
    category: string
    amount: number
    count: number
}

export default function RecurringSubscriptionsCard() {
    const transactions = useSelector((state: RootState) => state.transactions.list)

    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ä–∞—Å—Ö–æ–¥—ã
    const expenses = transactions.filter(tx => tx.type === 'expense')

    // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ + —Å—É–º–º–µ
    const groups: Record<string, Subscription> = {}

    expenses.forEach(tx => {
        const key = `${tx.category}_${tx.amount}`
        if (!groups[key]) {
            groups[key] = { category: tx.category, amount: tx.amount, count: 1 }
        } else {
            groups[key].count++
        }
    })

    // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è —Ö–æ—Ç—è –±—ã 2 —Ä–∞–∑–∞
    const recurring = Object.values(groups).filter(item => item.count >= 2)

    if (recurring.length === 0) return null

    return (
        <div className="mt-8 bg-white dark:bg-gray-800 p-6 rounded-xl shadow border dark:border-gray-700 animate-fadeInUp">
            <h3 className="text-lg font-semibold text-gray-800 dark:text-white mb-3">üìã –ü–æ–¥–ø–∏—Å–∫–∏</h3>
            <p className="text-sm text-gray-500 dark:text-gray-400 mb-2">
                –†–∞—Å–ø–æ–∑–Ω–∞–Ω—ã –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Ç—Ä–∞—Ç—ã ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –ø–æ–¥–ø–∏—Å–∫–∏:
            </p>

            <ul className="space-y-2">
                {recurring.map((item, idx) => (
                    <li key={idx} className="text-sm text-gray-700 dark:text-gray-300">
                        ‚Ä¢ {item.category} ‚Äî ‚Ç∏{item.amount} / –º–µ—Å ({item.count}√ó)
                    </li>
                ))}
            </ul>
        </div>
    )
}
